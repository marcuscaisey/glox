// Code generated by "stringer -type Type -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Illegal-0]
	_ = x[EOF-1]
	_ = x[keywordsStart-2]
	_ = x[Print-3]
	_ = x[Var-4]
	_ = x[True-5]
	_ = x[False-6]
	_ = x[Nil-7]
	_ = x[If-8]
	_ = x[Else-9]
	_ = x[And-10]
	_ = x[Or-11]
	_ = x[While-12]
	_ = x[For-13]
	_ = x[Function-14]
	_ = x[Return-15]
	_ = x[Class-16]
	_ = x[This-17]
	_ = x[Super-18]
	_ = x[keywordsEnd-19]
	_ = x[Ident-20]
	_ = x[String-21]
	_ = x[Number-22]
	_ = x[Semicolon-23]
	_ = x[Comma-24]
	_ = x[Dot-25]
	_ = x[Assign-26]
	_ = x[Plus-27]
	_ = x[Minus-28]
	_ = x[Asterisk-29]
	_ = x[Slash-30]
	_ = x[Percent-31]
	_ = x[Less-32]
	_ = x[LessEqual-33]
	_ = x[Greater-34]
	_ = x[GreaterEqual-35]
	_ = x[Equal-36]
	_ = x[NotEqual-37]
	_ = x[Bang-38]
	_ = x[Question-39]
	_ = x[Colon-40]
	_ = x[LeftParen-41]
	_ = x[RightParen-42]
	_ = x[LeftBrace-43]
	_ = x[RightBrace-44]
}

const _Type_name = "ILLEGALEOFkeywordsStartprintvartruefalsenilifelseandorwhileforfunreturnclassthissuperkeywordsEndidentifierstringnumber;,.=+-*/%<<=>>===!=!?:(){}"

var _Type_index = [...]uint8{0, 7, 10, 23, 28, 31, 35, 40, 43, 45, 49, 52, 54, 59, 62, 65, 71, 76, 80, 85, 96, 106, 112, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
