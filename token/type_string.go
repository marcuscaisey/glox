// Code generated by "stringer -type Type -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Illegal-0]
	_ = x[Comment-1]
	_ = x[EOF-2]
	_ = x[keywordsStart-3]
	_ = x[Print-4]
	_ = x[Var-5]
	_ = x[True-6]
	_ = x[False-7]
	_ = x[Nil-8]
	_ = x[If-9]
	_ = x[Else-10]
	_ = x[And-11]
	_ = x[Or-12]
	_ = x[While-13]
	_ = x[For-14]
	_ = x[Function-15]
	_ = x[Return-16]
	_ = x[Class-17]
	_ = x[This-18]
	_ = x[Super-19]
	_ = x[keywordsEnd-20]
	_ = x[Semicolon-21]
	_ = x[Comma-22]
	_ = x[Dot-23]
	_ = x[Ident-24]
	_ = x[String-25]
	_ = x[Number-26]
	_ = x[Assign-27]
	_ = x[Plus-28]
	_ = x[Minus-29]
	_ = x[Asterisk-30]
	_ = x[Slash-31]
	_ = x[Less-32]
	_ = x[LessEqual-33]
	_ = x[Greater-34]
	_ = x[GreaterEqual-35]
	_ = x[Equal-36]
	_ = x[NotEqual-37]
	_ = x[Bang-38]
	_ = x[Question-39]
	_ = x[Colon-40]
	_ = x[LeftParen-41]
	_ = x[RightParen-42]
	_ = x[LeftBrace-43]
	_ = x[RightBrace-44]
}

const _Type_name = "ILLEGALCOMMENTEOFkeywordsStartprintvartruefalsenilifelseandorwhileforfunreturnclassthissuperkeywordsEnd;,.identifierstringnumber=+-*/<<=>>===!=!?:(){}"

var _Type_index = [...]uint8{0, 7, 14, 17, 30, 35, 38, 42, 47, 50, 52, 56, 59, 61, 66, 69, 72, 78, 83, 87, 92, 103, 104, 105, 106, 116, 122, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
